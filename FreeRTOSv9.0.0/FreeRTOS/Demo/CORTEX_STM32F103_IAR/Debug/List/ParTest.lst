###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        03/May/2017  13:42:10
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\ParTest\ParTest.c
#    Command line =  
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\ParTest\ParTest.c
#        -D VECT_TAB_FLASH -D IAR_ARM_CM3 -lcN
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\List\
#        --diag_suppress Pa082,pe191 -o
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.2\arm\INC\c\DLib_Config_Full.h"
#        -I
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\.\
#        -I
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\STM32F10xFWLib\inc\
#        -I
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\..\..\Source\include\
#        -I
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\..\common\include\
#        -Ol --use_c++_inline --require_prototypes
#    List file    =  
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\List\ParTest.lst
#    Object file  =  
#        E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\Obj\ParTest.o
#
###############################################################################

E:\BaiduNetdiskDownload\OneNET开发板--资料、软件下载\资料\RTOS资料\FreeRTOS\FreeRTOSv9.0.0\FreeRTOS\Demo\CORTEX_STM32F103_IAR\ParTest\ParTest.c
      1          /*
      2              FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
      3              All rights reserved
      4          
      5              VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
      6          
      7              This file is part of the FreeRTOS distribution.
      8          
      9              FreeRTOS is free software; you can redistribute it and/or modify it under
     10              the terms of the GNU General Public License (version 2) as published by the
     11              Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
     12          
     13              ***************************************************************************
     14              >>!   NOTE: The modification to the GPL is included to allow you to     !<<
     15              >>!   distribute a combined work that includes FreeRTOS without being   !<<
     16              >>!   obliged to provide the source code for proprietary components     !<<
     17              >>!   outside of the FreeRTOS kernel.                                   !<<
     18              ***************************************************************************
     19          
     20              FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
     21              WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     22              FOR A PARTICULAR PURPOSE.  Full license text is available on the following
     23              link: http://www.freertos.org/a00114.html
     24          
     25              ***************************************************************************
     26               *                                                                       *
     27               *    FreeRTOS provides completely free yet professionally developed,    *
     28               *    robust, strictly quality controlled, supported, and cross          *
     29               *    platform software that is more than just the market leader, it     *
     30               *    is the industry's de facto standard.                               *
     31               *                                                                       *
     32               *    Help yourself get started quickly while simultaneously helping     *
     33               *    to support the FreeRTOS project by purchasing a FreeRTOS           *
     34               *    tutorial book, reference manual, or both:                          *
     35               *    http://www.FreeRTOS.org/Documentation                              *
     36               *                                                                       *
     37              ***************************************************************************
     38          
     39              http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
     40              the FAQ page "My application does not run, what could be wrong?".  Have you
     41              defined configASSERT()?
     42          
     43              http://www.FreeRTOS.org/support - In return for receiving this top quality
     44              embedded software for free we request you assist our global community by
     45              participating in the support forum.
     46          
     47              http://www.FreeRTOS.org/training - Investing in training allows your team to
     48              be as productive as possible as early as possible.  Now you can receive
     49              FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
     50              Ltd, and the world's leading authority on the world's leading RTOS.
     51          
     52              http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
     53              including FreeRTOS+Trace - an indispensable productivity tool, a DOS
     54              compatible FAT file system, and our tiny thread aware UDP/IP stack.
     55          
     56              http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
     57              Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
     58          
     59              http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
     60              Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
     61              licenses offer ticketed support, indemnification and commercial middleware.
     62          
     63              http://www.SafeRTOS.com - High Integrity Systems also provide a safety
     64              engineered and independently SIL3 certified version for use in safety and
     65              mission critical applications that require provable dependability.
     66          
     67              1 tab == 4 spaces!
     68          */
     69          
     70          /*-----------------------------------------------------------
     71           * Simple parallel port IO routines.
     72           *-----------------------------------------------------------*/
     73          
     74          /* FreeRTOS.org includes. */
     75          #include "FreeRTOS.h"
     76          #include "task.h"
     77          #include "partest.h"
     78          
     79          /* Library includes. */
     80          #include "stm32f10x_lib.h"
     81          
     82          #define partstMAX_OUTPUT_LED	( 4 )
     83          #define partstFIRST_LED			GPIO_Pin_6
     84          
     85          static unsigned short usOutputValue = 0;
     86          
     87          /*-----------------------------------------------------------*/
     88          
     89          void vParTestInitialise( void )
     90          {
     91          GPIO_InitTypeDef GPIO_InitStructure;
     92          
     93          	/* Configure PC.06, PC.07, PC.08 and PC.09 as output push-pull */
     94          	GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9;
     95          	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
     96          	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     97          	GPIO_Init( GPIOC, &GPIO_InitStructure );
     98          }
     99          /*-----------------------------------------------------------*/
    100          
    101          void vParTestSetLED( unsigned portBASE_TYPE uxLED, signed portBASE_TYPE xValue )
    102          {
    103          unsigned short usBit;
    104          
    105          	vTaskSuspendAll();
    106          	{
    107          		if( uxLED < partstMAX_OUTPUT_LED )
    108          		{
    109          			usBit = partstFIRST_LED << uxLED;
    110          
    111          			if( xValue == pdFALSE )
    112          			{
    113          				usBit ^= ( unsigned short ) 0xffff;
    114          				usOutputValue &= usBit;
    115          			}
    116          			else
    117          			{
    118          				usOutputValue |= usBit;
    119          			}
    120          
    121          			GPIO_Write( GPIOC, usOutputValue );
    122          		}	
    123          	}
    124          	xTaskResumeAll();
    125          }
    126          /*-----------------------------------------------------------*/
    127          
    128          void vParTestToggleLED( unsigned portBASE_TYPE uxLED )
    129          {
    130          unsigned short usBit;
    131          
    132          	vTaskSuspendAll();
    133          	{
    134          		if( uxLED < partstMAX_OUTPUT_LED )
    135          		{
    136          			usBit = partstFIRST_LED << uxLED;
    137          
    138          			if( usOutputValue & usBit )
    139          			{
    140          				usOutputValue &= ~usBit;
    141          			}
    142          			else
    143          			{
    144          				usOutputValue |= usBit;
    145          			}
    146          
    147          			GPIO_Write( GPIOC, usOutputValue );
    148          		}
    149          	}
    150          	xTaskResumeAll();
    151          }
    152          /*-----------------------------------------------------------*/
    153          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   vParTestInitialise
         8   -> GPIO_Init
      16   vParTestSetLED
        16   -> GPIO_Write
        16   -> vTaskSuspendAll
        16   -> xTaskResumeAll
       8   vParTestToggleLED
         8   -> GPIO_Write
         8   -> vTaskSuspendAll
         8   -> xTaskResumeAll


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       2  usOutputValue
      34  vParTestInitialise
      70  vParTestSetLED
      66  vParTestToggleLED

 
   2 bytes in section .bss
 178 bytes in section .text
 
 178 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: none
